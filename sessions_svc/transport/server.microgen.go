// Code generated by microgen 1.0.5. DO NOT EDIT.

package transport

import (
	"context"
	sessionssvc "github.com/SurajKadam7/session-service/sessions_svc"
	endpoint "github.com/go-kit/kit/endpoint"
)

func Endpoints(svc sessionssvc.Service) EndpointsSet {
	return EndpointsSet{
		AddEndpoint:          AddEndpoint(svc),
		RemoveEndpoint:       RemoveEndpoint(svc),
		SendGroupMsgEndpoint: SendGroupMsgEndpoint(svc),
		SendMsgEndpoint:      SendMsgEndpoint(svc),
	}
}

func AddEndpoint(svc sessionssvc.Service) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		req := request.(*AddRequest)
		res0, res1 := svc.Add(arg0, req.SessionInfo)
		return &AddResponse{Res: res0}, res1
	}
}

func SendMsgEndpoint(svc sessionssvc.Service) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		req := request.(*SendMsgRequest)
		res0, res1 := svc.SendMsg(arg0, req.UserId, req.Message)
		return &SendMsgResponse{Status: res0}, res1
	}
}

func SendGroupMsgEndpoint(svc sessionssvc.Service) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		req := request.(*SendGroupMsgRequest)
		res0, res1 := svc.SendGroupMsg(arg0, req.UserId, req.GroupId, req.Message)
		return &SendGroupMsgResponse{Status: res0}, res1
	}
}

func RemoveEndpoint(svc sessionssvc.Service) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		req := request.(*RemoveRequest)
		res0, res1 := svc.Remove(arg0, req.UserId)
		return &RemoveResponse{Res: res0}, res1
	}
}
